// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sicpa.Api.Application.Persistence;

namespace Sicpa.Api.Application.Migrations
{
    [DbContext(typeof(SicDbContext))]
    partial class SicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int?>("id_department")
                        .HasColumnType("integer");

                    b.Property<int>("id_enterprise")
                        .HasColumnType("integer");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.HasIndex("id_department");

                    b.HasIndex("id_enterprise");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Department_Empoyee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("departmentid")
                        .HasColumnType("integer");

                    b.Property<int?>("employeeid")
                        .HasColumnType("integer");

                    b.Property<int>("id_department")
                        .HasColumnType("integer");

                    b.Property<int>("id_employee")
                        .HasColumnType("integer");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.HasIndex("departmentid");

                    b.HasIndex("employeeid");

                    b.ToTable("DepartmentsEmpoyees");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("id_employee")
                        .HasColumnType("integer");

                    b.Property<string>("mail")
                        .HasColumnType("text");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<string>("surnam")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("id_employee");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Enterprise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("modified_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("id");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Department", b =>
                {
                    b.HasOne("Sicpa.Api.Domain.Models.Department", null)
                        .WithMany("departments")
                        .HasForeignKey("id_department");

                    b.HasOne("Sicpa.Api.Domain.Models.Enterprise", "enterprise")
                        .WithMany("departments")
                        .HasForeignKey("id_enterprise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("enterprise");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Department_Empoyee", b =>
                {
                    b.HasOne("Sicpa.Api.Domain.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentid");

                    b.HasOne("Sicpa.Api.Domain.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeid");

                    b.Navigation("department");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Employee", b =>
                {
                    b.HasOne("Sicpa.Api.Domain.Models.Employee", null)
                        .WithMany("employees")
                        .HasForeignKey("id_employee");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Department", b =>
                {
                    b.Navigation("departments");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Employee", b =>
                {
                    b.Navigation("employees");
                });

            modelBuilder.Entity("Sicpa.Api.Domain.Models.Enterprise", b =>
                {
                    b.Navigation("departments");
                });
#pragma warning restore 612, 618
        }
    }
}
